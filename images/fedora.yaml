image:
  distribution: fedora

source:
  downloader: fedora-http
  url: https://kojipkgs.fedoraproject.org

targets:
  lxc:
    create-message: |
      You just created a {{ image.description }} container.
    config:
    - type: all
      before: 5
      content: |-
        lxc.include = LXC_TEMPLATE_CONFIG/fedora.common.conf

    - type: user
      before: 5
      content: |-
        lxc.include = LXC_TEMPLATE_CONFIG/fedora.userns.conf

    - type: all
      after: 4
      content: |-
        lxc.include = LXC_TEMPLATE_CONFIG/common.conf

    - type: user
      after: 4
      content: |-
        lxc.include = LXC_TEMPLATE_CONFIG/userns.conf

    - type: all
      content: |-
        lxc.arch = {{ image.architecture_kernel }}

files:
- path: /etc/default/grub
  generator: dump
  content: |-
    # Set the recordfail timeout
    GRUB_RECORDFAIL_TIMEOUT=0

    # Do not wait on grub prompt
    GRUB_TIMEOUT=0

    # Set the default commandline
    GRUB_CMDLINE_LINUX_DEFAULT="${GRUB_CMDLINE_LINUX_DEFAULT} console=tty1 console=ttyS0"

    # Set the grub console type
    GRUB_TERMINAL=console

    # Disable os-prober
    GRUB_DISABLE_OS_PROBER=true
  types:
  - vm

- path: /etc/dracut.conf.d/lxd.conf
  generator: dump
  content: |-
    add_drivers+=virtio_scsi
  types:
  - vm

- generator: fstab
  types:
  - vm

- path: /etc/machine-id
  generator: dump

- path: /var/lib/dbus/machine-id
  generator: remove

- path: /etc/hostname
  generator: hostname

- path: /etc/hosts
  generator: hosts

- name: eth0.network
  path: /etc/systemd/network/eth0.network
  generator: dump
  content: |-
    [Match]
    Name=eth0

    [Network]
    DHCP=ipv4
  variants:
  - default
  types:
  - container

- name: enp5s0.network
  path: /etc/systemd/network/enp5s0.network
  generator: dump
  content: |-
    [Match]
    Name=enp5s0

    [Network]
    DHCP=ipv4
  variants:
  - default
  types:
  - vm

- name: networkd-override
  path: /etc/systemd/system/systemd-networkd.service.d/lxc.conf
  generator: dump
  content: |-
    [Service]
    BindReadOnlyPaths=/sys
  variants:
  - default
  releases:
  - 31
  - 32
  types:
  - container

- name: network-device-down.service
  path: /etc/systemd/system/network-device-down.service
  generator: dump
  content: |-
    [Unit]
    Description=Turn off network device
    Before=NetworkManager.service

    [Service]
    ExecStart=-/usr/sbin/ip link set eth0 down
    Type=oneshot
    RemainAfterExit=true

    [Install]
    WantedBy=default.target
  variants:
  - cloud
  - gnome
  - kde
  - xfce
  types:
  - container

- name: meta-data
  generator: cloud-init
  variants:
  - cloud
  - gnome
  - kde
  - xfce

- name: network-config
  generator: cloud-init
  variants:
  - cloud
  - gnome
  - kde
  - xfce

- name: user-data
  generator: cloud-init
  variants:
  - cloud
  - gnome
  - kde
  - xfce

- name: vendor-data
  generator: cloud-init
  variants:
  - cloud
  - gnome
  - kde
  - xfce

- generator: lxd-agent
  types:
  - vm

packages:
  manager: dnf
  update: true
  cleanup: true
  sets:
  - packages:
    - cpio
    - dhcp-client
    - file
    - findutils
    - fipscheck
    - gettext
    - glibc-all-langpacks
    - hardlink
    - initscripts
    - ipcalc
    - iproute
    - iproute-tc
    - iputils
    - kbd
    - kmod
    - openssh-clients
    - passwd
    - pigz
    - policycoreutils
    - procps-ng
    - systemd-udev
    - which
    - xz
    action: install

  - packages:
    - cloud-init
    - network-scripts
    - NetworkManager
    action: install
    variants:
    - cloud
    - gnome
    - kde
    - xfce

  - packages:
    - @gnome-desktop
    action: install
    variants:
    - gnome

  - packages:
    - @kde-desktop
    action: install
    variants:
    - kde

  - packages:
    - @xfce-desktop-environment
    action: install
    variants:
    - xfce

  - packages:
    - libsss_idmap
    - libsss_nss_idmap
    - sssd-client
    action: remove

  - packages:
    - grub2-efi-x64
    action: install
    architectures:
    - x86_64
    types:
    - vm

  - packages:
    - grub2-efi-aa64
    action: install
    architectures:
    - aarch64
    types:
    - vm

  - packages:
    - kernel
    - shim
    - dracut
    action: install
    types:
    - vm

actions:
- trigger: post-packages
  action: |-
    #!/bin/sh
    umount -l /etc/resolv.conf || true
    rm /etc/resolv.conf
    ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf
    systemctl enable systemd-resolved
    cp -R /etc/skel/.bash* /root/

- trigger: post-packages
  action: |-
    #!/bin/sh
    systemctl enable systemd-networkd
  variants:
  - default

- trigger: post-packages
  action: |-
    #!/bin/sh
    systemctl disable systemd-networkd
    systemctl enable NetworkManager
    systemctl enable cloud-init
    systemctl enable cloud-config
    systemctl enable cloud-final
  variants:
  - cloud
  - xfce

- trigger: post-unpack
  action: |-
    # Generate machine-id in order for the kernel stuff to be configured properly
    systemd-machine-id-setup
  types:
  - vm

- trigger: post-files
  action: |-
    #!/bin/sh
    set -eux

    # Remove the "Container Image" string as this is going to be am VM
    sed -i 's/[ ]*(Container Image)//;/^VARIANT/d' /etc/os-release

    target="$(readlink -f /etc/grub2-efi.cfg)"
    grub2-mkconfig -o "${target}"
    sed -i "s#root=[^ ]*#root=/dev/sda2#g" "${target}"

    # Regenerate initramfs
    kver=$(ls /boot/initramfs-*.img | sed -r 's#.*initramfs-(.+)\.img#\1#')
    dracut --kver "${kver}" -f

    # Unmask all masked unit files
    for f in $(find /etc/systemd/system -type l); do
      [ "$(readlink ${f})" = "/dev/null" ] && rm "${f}"
    done

    # Wipe grub environment
    rm -f /boot/efi/EFI/fedora/grubenv

    exit 0
  types:
  - vm

- trigger: post-files
  action: |-
    #!/bin/sh
    set -eux

    systemctl enable network-device-down.service
  variants:
  - cloud
  - xfce
  types:
  - container
